/*
 * Headwind Remote: Open Source Remote Access Software for Android
 * https://headwind-remote.com
 *
 * Copyright (C) 2022 headwind-remote.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.hmdm.control"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 31
        versionName "1.31"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Default server URL (including last "/", for example: https://srv.apuppet.org/web-admin/ )
        // Leave empty if you do not need to preconfigure any server URL
        buildConfigField("String", "DEFAULT_SERVER_URL", "\"\"")
        // Default server secret (leave empty if no secret should be preconfigured;
        // secret is required to connect to the server)
        buildConfigField("String", "DEFAULT_SECRET", "\"\"")

        // Build variant displayed on the "About" screen
        buildConfigField("String", "VARIANT", "\"opensource\"")

        // Prefer Google (software) AVC encoder if available
        buildConfigField("Boolean", "USE_GOOGLE_ENCODER", "false")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

    // WebRTC
    implementation 'org.webrtc:google-webrtc:1.0.+'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}
